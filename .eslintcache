[{"E:\\IT\\react\\my-app\\src\\App.js":"1","E:\\IT\\react\\my-app\\src\\index.js":"2","E:\\IT\\react\\my-app\\src\\pages\\Signup.js":"3","E:\\IT\\react\\my-app\\src\\components\\Navbar.js":"4","E:\\IT\\react\\my-app\\src\\reportWebVitals.js":"5","E:\\IT\\react\\my-app\\src\\firebase\\firebase.utils.js":"6","E:\\IT\\react\\my-app\\src\\pages\\Signin.js":"7","E:\\IT\\react\\my-app\\src\\Router\\Router.js":"8","E:\\IT\\react\\my-app\\src\\router\\Router.js":"9","E:\\IT\\react\\my-app\\src\\context\\AuthContext.js":"10","E:\\IT\\react\\my-app\\src\\components\\Footer.js":"11","E:\\IT\\react\\my-app\\src\\pages\\Main.js":"12","E:\\IT\\react\\my-app\\src\\components\\MediaCard.js":"13","E:\\IT\\react\\my-app\\src\\pages\\UserDetail.js":"14","E:\\IT\\react\\my-app\\src\\helper\\FetchData.js":"15","E:\\IT\\react\\my-app\\src\\helper\\customErrorHandler.js":"16","E:\\IT\\react\\my-app\\src\\helper\\FormatDate.js":"17","E:\\IT\\react\\my-app\\src\\pages\\ForgotPassword.js":"18","E:\\IT\\react\\my-app\\src\\pages\\UserPost.js":"19","E:\\IT\\react\\my-app\\src\\components\\UserPostCard.js":"20","E:\\IT\\react\\my-app\\src\\components\\FullProfileCard.js":"21","E:\\IT\\react\\my-app\\src\\components\\MapCard.js":"22"},{"size":294,"mtime":1607370529065,"results":"23","hashOfConfig":"24"},{"size":500,"mtime":1606242216656,"results":"25","hashOfConfig":"24"},{"size":3813,"mtime":1606831327387,"results":"26","hashOfConfig":"24"},{"size":3718,"mtime":1607438452620,"results":"27","hashOfConfig":"24"},{"size":362,"mtime":1606242216656,"results":"28","hashOfConfig":"24"},{"size":2056,"mtime":1606831237092,"results":"29","hashOfConfig":"24"},{"size":3805,"mtime":1606831297349,"results":"30","hashOfConfig":"24"},{"size":1261,"mtime":1606856283457,"results":"31","hashOfConfig":"24"},{"size":461,"mtime":1606569232478,"results":"32","hashOfConfig":"24"},{"size":578,"mtime":1606831214076,"results":"33","hashOfConfig":"24"},{"size":1285,"mtime":1606825749403,"results":"34","hashOfConfig":"24"},{"size":1798,"mtime":1606826394201,"results":"35","hashOfConfig":"24"},{"size":2184,"mtime":1607116001987,"results":"36","hashOfConfig":"24"},{"size":1715,"mtime":1607161782457,"results":"37","hashOfConfig":"24"},{"size":315,"mtime":1606762543784,"results":"38","hashOfConfig":"24"},{"size":395,"mtime":1606733124797,"results":"39","hashOfConfig":"24"},{"size":223,"mtime":1606843342188,"results":"40","hashOfConfig":"24"},{"size":2706,"mtime":1606856357353,"results":"41","hashOfConfig":"24"},{"size":1964,"mtime":1606856391279,"results":"42","hashOfConfig":"24"},{"size":4013,"mtime":1606856328758,"results":"43","hashOfConfig":"24"},{"size":4616,"mtime":1607438478879,"results":"44","hashOfConfig":"24"},{"size":619,"mtime":1607438574236,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"44zgr6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\IT\\react\\my-app\\src\\App.js",[],"E:\\IT\\react\\my-app\\src\\index.js",[],["98","99"],"E:\\IT\\react\\my-app\\src\\pages\\Signup.js",[],"E:\\IT\\react\\my-app\\src\\components\\Navbar.js",["100","101","102","103"],"E:\\IT\\react\\my-app\\src\\reportWebVitals.js",[],["104","105"],"E:\\IT\\react\\my-app\\src\\firebase\\firebase.utils.js",[],"E:\\IT\\react\\my-app\\src\\pages\\Signin.js",[],"E:\\IT\\react\\my-app\\src\\Router\\Router.js",[],"E:\\IT\\react\\my-app\\src\\router\\Router.js",[],"E:\\IT\\react\\my-app\\src\\context\\AuthContext.js",[],"E:\\IT\\react\\my-app\\src\\components\\Footer.js",[],"E:\\IT\\react\\my-app\\src\\pages\\Main.js",["106"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  capitalize,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport MediaCard from \"../components/MediaCard\";\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n    marginTop: \"5rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nfunction Main() {\r\n  const [userList, setUserList] = useState();\r\n  const mainStyles = stylesFunc();\r\n  const { REACT_APP_API_BASE_URL, REACT_APP_API_TOKEN } = process.env;\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios.get(`${REACT_APP_API_BASE_URL}/user`, {\r\n      headers: {\r\n        \"app-id\": REACT_APP_API_TOKEN,\r\n      },\r\n    });\r\n    setUserList(response?.data?.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userList ? (\r\n        //TODO: center loading icon\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          {userList?.map((user) => {\r\n            return (\r\n              <Grid item sm={4} xs={6} key={user?.id}>\r\n                <MediaCard\r\n                  id={user.id}\r\n                  userImage={user?.picture}\r\n                  userName={`${capitalize(user?.title)} ${user?.firstName} ${\r\n                    user?.lastName\r\n                  }`}\r\n                  userEmail={user?.email}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;","E:\\IT\\react\\my-app\\src\\components\\MediaCard.js",[],"E:\\IT\\react\\my-app\\src\\pages\\UserDetail.js",["107","108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, CircularProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { formatDateFunc } from \"../helper/FormatDate\";\r\nimport FullProfileCard from \"../components/FullProfileCard\"\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\nfunction UserDetail() {\r\n  const { id } = useParams();\r\n  const mainStyles = stylesFunc();\r\n\r\n  const [userDetail, setUserDetail] = useState();\r\n  useEffect(() => {\r\n    fetchData(`/user/${id}`)\r\n      .then((res) => setUserDetail(res))\r\n      .catch()\r\n      .finally();\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {console.log(userDetail)}\r\n      {!userDetail ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <FullProfileCard user={userDetail}/>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserDetail;\r\n\r\n{/* <img src={userDetail?.picture} alt=\"user\" />\r\n          <Typography variant=\"h4\">{userDetail?.firstName}</Typography>\r\n          <Typography variant=\"h4\">{userDetail?.lastName}</Typography>\r\n          {userDetail?.registerDate && (\r\n            <Typography variant=\"h4\">\r\n              {formatDateFunc(userDetail.registerDate)}\r\n            </Typography>\r\n          )}\r\n          <Typography variant=\"h4\">{userDetail?.phone}</Typography> */}","E:\\IT\\react\\my-app\\src\\helper\\FetchData.js",[],"E:\\IT\\react\\my-app\\src\\helper\\customErrorHandler.js",[],"E:\\IT\\react\\my-app\\src\\helper\\FormatDate.js",["110"],"  \r\nimport { DateRangeRounded } from \"@material-ui/icons\";\r\nimport { format as formatDate, parseISO } from \"date-fns\";\r\n\r\nexport const formatDateFunc = (date) => {\r\n  return formatDate(parseISO(date), \"MM/dd/yyyy HH:mm\")\r\n}","E:\\IT\\react\\my-app\\src\\pages\\ForgotPassword.js",["111"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nconst forgotPasswordValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n});\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    height: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  forgotPassword: {\r\n    margin: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n};\r\n\r\nfunction ForgotPassword() {\r\n  const [loginError, setLoginError] = useState(null);\r\n  const forgotPasswordStyles = stylesFunc();\r\n\r\n  const handleFormSubmit = (values) => {\r\n    firebase.forgotPassword(values.email).then(() => {});\r\n  };\r\n\r\n  return (\r\n    <Container className={forgotPasswordStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={forgotPasswordStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={forgotPasswordStyles.forgotPassword} variant=\"h4\">\r\n        Forgot Password\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={forgotPasswordValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <p style={{ textAlign: \"center\", color: \"red\" }}>\r\n              <small>{loginError}</small>\r\n            </p>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;","E:\\IT\\react\\my-app\\src\\pages\\UserPost.js",["112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { formatDateFunc } from \"../helper/FormatDate\";\r\nimport UserPostCard from \"../components/UserPostCard\";\r\nimport { PostAdd } from \"@material-ui/icons\";\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    minHeight: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\nfunction UserPost() {\r\n  const { id } = useParams();\r\n  const mainStyles = stylesFunc();\r\n\r\n  const [userPost, setUserPost] = useState();\r\n\r\n  // TODO: fill in catch finally\r\n  useEffect(() => {\r\n    fetchData(`/user/${id}/post`)\r\n      .then((res) => setUserPost(res?.data))\r\n      .catch()\r\n      .finally();\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userPost ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          {userPost?.map((post) => {\r\n            const { firstName, lastName } = post.owner;\r\n            return (\r\n              <Grid item sm={4} xs={6} key={post?.id}>\r\n                <UserPostCard\r\n                  id={post.id}\r\n                  userInitial={firstName[0]}\r\n                  title={`${firstName} ${lastName}`}\r\n                  subheader={formatDateFunc(post.publishDate)}\r\n                  imgSrc={post.image}\r\n                  imgTitle=\"Image Title\"\r\n                  description={post.text}\r\n                  likes={post.likes}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserPost;","E:\\IT\\react\\my-app\\src\\components\\UserPostCard.js",["114"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\n// TODO: add proptypes\r\nexport default function UserPostCard({\r\n  id,\r\n  userInitial,\r\n  title,\r\n  subheader,\r\n  imgSrc,\r\n  imgTitle,\r\n  description,\r\n  likes,\r\n}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [comments, setComments] = useState();\r\n\r\n  const handleExpandClick = (postId) => {\r\n    if (!expanded) getComments(postId);\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const getComments = (postId) => {\r\n    fetchData(`/post/${postId}/comment`)\r\n      .then((res) => setComments(res?.data))\r\n      .catch()\r\n      .finally();\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {userInitial}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={subheader}\r\n      />\r\n      <CardMedia className={classes.media} image={imgSrc} title={imgTitle} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {`${likes} Likes`}\r\n        </Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={() => handleExpandClick(id)}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          {!comments ? (\r\n            <CircularProgress />\r\n          ) : comments.length ? (\r\n            comments.map((comment) => {\r\n              return (\r\n                <React.Fragment key={comment.id}>\r\n                  <Typography variant=\"body2\">\r\n                    {comment.owner.firstName}\r\n                  </Typography>\r\n                  <Typography paragraph>{comment.message}</Typography>\r\n                  <hr />\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          ) : (\r\n            \"No comment\"\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}","E:\\IT\\react\\my-app\\src\\components\\FullProfileCard.js",[],"E:\\IT\\react\\my-app\\src\\components\\MapCard.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":42,"nodeType":"121","messageId":"122","endLine":1,"endColumn":49},{"ruleId":"119","severity":1,"message":"123","line":35,"column":10,"nodeType":"121","messageId":"122","endLine":35,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":35,"column":16,"nodeType":"121","messageId":"122","endLine":35,"endColumn":23},{"ruleId":"125","severity":1,"message":"126","line":44,"column":6,"nodeType":"127","endLine":44,"endColumn":8,"suggestions":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"125","severity":1,"message":"131","line":42,"column":6,"nodeType":"127","endLine":42,"endColumn":8,"suggestions":"132"},{"ruleId":"119","severity":1,"message":"133","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"134","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":47,"column":1,"nodeType":"137","messageId":"138","endLine":55,"endColumn":72},{"ruleId":"119","severity":1,"message":"139","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":26},{"ruleId":"119","severity":1,"message":"140","line":40,"column":22,"nodeType":"121","messageId":"122","endLine":40,"endColumn":35},{"ruleId":"119","severity":1,"message":"133","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"141","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":17},{"ruleId":"119","severity":1,"message":"142","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":17},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["145"],["143"],["144"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["146"],"'Typography' is defined but never used.","'formatDateFunc' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DateRangeRounded' is defined but never used.","'setLoginError' is assigned a value but never used.","'PostAdd' is defined but never used.","'ShareIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [history]",{"range":"151","text":"152"},"Update the dependencies array to be: [fetchData]",{"range":"153","text":"154"},[1386,1388],"[history]",[1038,1040],"[fetchData]"]